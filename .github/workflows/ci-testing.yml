name: CI testing

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-10.15, windows-2019]
        python-version: [3.7]

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 35

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Github Actions: Run step on specific OS: https://stackoverflow.com/a/57948488/4521646
      - name: Setup macOS
        if: runner.os == 'macOS'
        run: |
          brew install libomp  # https://github.com/pytorch/pytorch/issues/20030

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache Poetry dependencies
        uses: actions/cache@v2
        with:
          path: |
            .venv
            ~/.cache/pypoetry
            C:\Users\runneradmin\AppData\Local\pypoetry\Cache
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          poetry install
          poetry --version
          poetry show
        shell: bash

      - name: Tests
        run: |
          poetry run coverage run --source project -m pytest project tests -v --junitxml=junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml

      - name: Statistics
        if: success()
        run: |
          poetry run coverage report
